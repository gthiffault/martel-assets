@charset "UTF-8";
/* ==========================================================================
   INUITCSS
   ========================================================================== */
/**
 * inuitcss, by @csswizardry
 *
 * github.com/inuitcss | inuitcss.com
 */
/**
 * This is an example inuitcss manifest file. DO NOT MODIFY THIS FILE DIRECTLY.
 * Instead, copy and paste it into your own CSS directory and make additions,
 * extensions, and modifications there.
 */
/**
 * CONTENTS
 *
 * SETTINGS
 * Config...............Project-level configuration and feature switches.
 * Core.................inuitcss’ core and setup settings.
 * Global...............Project-wide variables and settings.
 *
 * TOOLS
 * Font-size............A mixin which guarantees baseline-friendly line-heights.
 * Clearfix.............Micro clearfix mixin.
 * Hidden...............Mixin for hiding elements.
 * Sass MQ..............inuitcss’ default media query manager.
 *
 * GENERIC
 * Box-sizing...........Better default `box-sizing`.
 * Normalize.css........A level playing field using @necolas’ Normalize.css.
 * Reset................A tiny reset to complement Normalize.css.
 * Shared...............Sensibly and tersely share some global commonalities
 *                      (particularly useful when managing vertical rhythm).
 *
 * ELEMENTS
 * Page.................Set up our document’s default `font-size` and
 *                      `line-height`.
 * Headings.............Very minimal (i.e. only font-size information) for
 *                      headings 1 through 6.
 * Images...............Base image styles.
 * Tables...............Simple table styles.
 *
 * OBJECTS
 * Wrapper..............Page constraint object.
 * Layout...............Generic layout module.
 * Media................Image- and text-like content side by side. The
 *                      poster-child of OOCSS.
 * Flag.................Table-layout-based advancement on the Media object.
 * List-bare............Lists with no bullets or indents.
 * List-inline..........A list whose items all site in a line.
 * Box..................Simple boxing abstraction.
 * Block................Image-on-top-of-text object.
 * Ratio................A container for maintaining aspect ratio of content.
 * Crop.................Provide a cropping context for media (images, etc.).
 * Table................Classes for manipulating `table`s.
 * Pack.................Pack items into available horizontal space.
 *
 * COMPONENTS
 * Buttons..............An example button component, and how it fits into the
 *                      inuitcss framework.
 *
 * UTILITIES
 * Clearfix.............Bind our clearfix onto a utility class.
 * Widths...............Simple width helper classes.
 * Headings.............Reassigning our heading styles to helper classes.
 * Spacings.............Nudge bits of the DOM around with these spacing
 *                      classes.
 * Responsive-Spacings..Enhances the function of normal spacings for
 *                      responsive usage.
 * Print................Reset-like styles taken from the HTML5 Boilerplate.
 * Hide.................Helper classes to hide content
 */
html {
  font-family: 'Open Sans', sans-serif; }

h1, h2, h3, h4, h5, h6, .c-title-page, .c-sidebar_title {
  font-family: 'Oswald', sans-serif;
  font-weight: 400;
  text-transform: uppercase; }

p, a, li {
  letter-spacing: 1.14px;
  line-height: 28px;
  font-weight: 300; }

/* ==========================================================================
   #BOX-SIZING
   ========================================================================== */
/**
 * More sensible default box-sizing:
 * css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice
 */
html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

*, *:before, *:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit; }

/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

/* ==========================================================================
   #RESET
   ========================================================================== */
/**
 * A very simple reset that sits on top of Normalize.css.
 */
body,
h1, h2, h3, h4, h5, h6,
blockquote, p, pre,
dl, dd, ol, ul,
figure,
hr,
fieldset, legend {
  margin: 0;
  padding: 0; }

/**
 * Remove trailing margins from nested lists.
 */
li > ol,
li > ul {
  margin-bottom: 0; }

/**
 * Remove default table spacing.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

/**
 * 1. Reset Chrome and Firefox behaviour which sets a `min-width: min-content;`
 *    on fieldsets.
 */
fieldset {
  min-width: 0;
  /* [1] */
  border: 0; }

/* ==========================================================================
   #SHARED
   ========================================================================== */
/**
 * Shared declarations for certain elements.
 */
/**
 * Always declare margins in the same direction:
 * csswizardry.com/2012/06/single-direction-margin-declarations
 */
address,
h1, h2, h3, h4, h5, h6,
blockquote, p, pre,
dl, ol, ul,
figure,
hr,
table,
fieldset {
  margin-bottom: 24px; }

/**
 * Consistent indentation for lists.
 */
dd, ol, ul {
  margin-left: 24px; }

/* ==========================================================================
   #PAGE
   ========================================================================== */
/**
 * Simple page-level setup.
 *
 * 1. Set the default `font-size` and `line-height` for the entire project,
 *    sourced from our default variables. The `font-size` is calculated to exist
 *    in ems, the `line-height` is calculated to exist unitlessly.
 * 2. Force scrollbars to always be visible to prevent awkward ‘jumps’ when
 *    navigating between pages that do/do not have enough content to produce
 *    scrollbars naturally.
 * 3. Ensure the page always fills at least the entire height of the viewport.
 */
html {
  font-size: 1em;
  /* [1] */
  line-height: 1.5;
  /* [1] */
  overflow-y: scroll;
  /* [2] */
  min-height: 100%;
  /* [3] */ }

/* ==========================================================================
   #HEADINGS
   ========================================================================== */
/**
 * Simple default styles for headings 1 through 6. Anything more opinionated
 * than simple font-size changes should likely be applied via classes (see:
 * http://csswizardry.com/2016/02/managing-typography-on-large-apps/).
 */
h1,
.c-title-page, h5 {
  font-size: 72px;
  line-height: 88px;
  letter-spacing: 5px;
  color: #FFF; }

.c-title-page {
  margin-bottom: 0; }

h2,
.c-main h1 {
  font-size: 44px;
  line-height: 56px;
  letter-spacing: 16px;
  text-align: center;
  margin-bottom: 80px; }
  h2 .c-title-w-color,
  .c-main h1 .c-title-w-color {
    color: #C5A37E; }

.c-main h1 {
  color: #1F1E1E;
  text-align: left; }

h3,
.services h2 {
  font-size: 32px;
  line-height: 40px;
  letter-spacing: 1px; }

h4,
.c-subtitle-page {
  font-size: 20px;
  line-height: 28px;
  letter-spacing: 16px; }

.c-subtitle-page {
  color: #C5A37E;
  text-transform: uppercase;
  margin-bottom: 4px; }

h6 {
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5; }

/* ==========================================================================
   #IMAGES
   ========================================================================== */
/**
 * 1. Fluid images for responsive purposes.
 * 2. Offset `alt` text from surrounding copy.
 * 3. Setting `vertical-align` removes the whitespace that appears under `img`
 *    elements when they are dropped into a page as-is. Safer alternative to
 *    using `display: block;`.
 */
img {
  max-width: 100%;
  /* [1] */
  font-style: italic;
  /* [2] */
  vertical-align: middle;
  /* [3] */ }

/**
   * If a `width` and/or `height` attribute has been explicitly defined, let’s
   * not make the image fluid.
   */
img[width],
img[height] {
  max-width: none; }

/* ==========================================================================
   #TABLES
   ========================================================================== */
/**
 * 1. Ensure tables fill up as much space as possible.
 */
table {
  width: 100%;
  /* [1] */ }

/* ==========================================================================
   #WRAPPER
   ========================================================================== */
/**
 * Page-level constraining and wrapping elements.
 */
.o-wrapper {
  padding-right: 24px;
  padding-left: 24px;
  margin-right: auto;
  margin-left: auto;
  max-width: 1366px; }
  .o-wrapper:after {
    content: "" !important;
    display: block !important;
    clear: both !important; }

.o-wrapper.-two {
  max-width: 963px; }

.o-wrapper.-three {
  max-width: 1160px; }

/* ==========================================================================
   #LAYOUT
   ========================================================================== */
/**
 * Grid-like layout system.
 *
 * The layout object provides us with a column-style layout system. This file
 * contains the basic structural elements, but classes should be complemented
 * with width utilities, for example:
 *
 *   <div class="o-layout">
 *     <div class="o-layout__item  u-1/2">
 *     </div>
 *     <div class="o-layout__item  u-1/2">
 *     </div>
 *   </div>
 *
 * The above will create a two-column structure in which each column will
 * fluidly fill half of the width of the parent. We can have more complex
 * systems:
 *
 *   <div class="o-layout">
 *     <div class="o-layout__item  u-1/1  u-1/3@medium">
 *     </div>
 *     <div class="o-layout__item  u-1/2  u-1/3@medium">
 *     </div>
 *     <div class="o-layout__item  u-1/2  u-1/3@medium">
 *     </div>
 *   </div>
 *
 * The above will create a system in which the first item will be 100% width
 * until we enter our medium breakpoint, when it will become 33.333% width. The
 * second and third items will be 50% of their parent, until they also become
 * 33.333% width at the medium breakpoint.
 *
 * We can also manipulate entire layout systems by adding a series of modifiers
 * to the `.o-layout` block. For example:
 *
 *   <div class="o-layout  o-layout--reverse">
 *
 * This will reverse the displayed order of the system so that it runs in the
 * opposite order to our source, effectively flipping the system over.
 *
 *   <div class="o-layout  o-layout--[right|center]">
 *
 * This will cause the system to fill up from either the centre or the right
 * hand side. Default behaviour is to fill up the layout system from the left.
 *
 * There are plenty more options available to us: explore them below.
 */
/* Default/mandatory classes
   ========================================================================== */
/**
 * 1. Allows us to use the layout object on any type of element.
 * 2. We need to defensively reset any box-model properties.
 * 3. Use the negative margin trick for multi-row grids:
 *    http://csswizardry.com/2011/08/building-better-grid-systems/
 */
.o-layout {
  display: block;
  /* [1] */
  margin: 0;
  /* [2] */
  padding: 0;
  /* [2] */
  list-style: none;
  /* [1] */
  margin-left: -24px;
  /* [3] */
  font-size: 0; }

/**
   * 1. Required in order to combine fluid widths with fixed gutters.
   * 2. Allows us to manipulate grids vertically, with text-level properties,
   *    etc.
   * 3. Default item alignment is with the tops of each other, like most
   *    traditional grid/layout systems.
   * 4. By default, all layout items are full-width (mobile first).
   * 5. Gutters provided by left padding:
   *    http://csswizardry.com/2011/08/building-better-grid-systems/
   * 6. Fallback for old IEs not supporting `rem` values.
   */
.o-layout__item {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* [1] */
  display: inline-block;
  /* [2] */
  vertical-align: top;
  /* [3] */
  width: 100%;
  /* [4] */
  padding-left: 24px;
  /* [5] */
  font-size: 16px;
  /* [6] */
  font-size: 1rem; }

/*------------------------------------*\
    #FLEX-LAYOUT
\*------------------------------------*/
/**
 * Flex layout provides a modifier class for the inuitcss layout object letting
 * layout-item share the same height on each row. It uses the flexbox property
 * and gently falls back in IE9.
 */
/**
 * Begin a flexbox layout group.
 *
 * 1. IE9 fallback.
 */
.layout--equal-height {
  display: block;
  /* [1] */
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap; }

/**
 * 1. Same height for layout-items.
 */
.layout--equal-height .o-layout__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  /* [1] */ }

/* Gutter size modifiers
   ========================================================================== */
.o-layout--flush {
  margin-left: 0; }
  .o-layout--flush > .o-layout__item {
    padding-left: 0; }

.o-layout--tiny {
  margin-left: -6px; }
  .o-layout--tiny > .o-layout__item {
    padding-left: 6px; }

.o-layout--small {
  margin-left: -12px; }
  .o-layout--small > .o-layout__item {
    padding-left: 12px; }

.o-layout--large {
  margin-left: -48px; }
  .o-layout--large > .o-layout__item {
    padding-left: 48px; }

.o-layout--xlarge {
  margin-left: -64px; }
  .o-layout--xlarge > .o-layout__item {
    padding-left: 64px; }

.o-layout--huge {
  margin-left: -96px; }
  .o-layout--huge > .o-layout__item {
    padding-left: 96px; }

/* Vertical alignment modifiers
   ========================================================================== */
/**
 * Align all grid items to the middles of each other.
 */
.o-layout--middle > .o-layout__item {
  vertical-align: middle; }

/**
 * Align all grid items to the bottoms of each other.
 */
.o-layout--bottom > .o-layout__item {
  vertical-align: bottom; }

/**
 * Stretch all grid items of each row to have an equal-height.
 * Please be aware that this modifier class doesn’t take any effect in IE9 and
 * below and other older browsers due to the lack of `display: flex` support.
 */
.o-layout--stretch {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap; }
  .o-layout--stretch > .o-layout__item {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
  .o-layout--stretch.o-layout--center {
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center; }
  .o-layout--stretch.o-layout--right {
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end; }
  .o-layout--stretch.o-layout--left {
    -webkit-box-pack: start;
        -ms-flex-pack: start;
            justify-content: flex-start; }

/* Fill order modifiers
   ========================================================================== */
/**
 * Fill up the layout system from the centre.
 */
.o-layout--center {
  text-align: center; }
  .o-layout--center > .o-layout__item {
    text-align: left; }

/**
 * Fill up the layout system from the right-hand side.
 */
.o-layout--right {
  text-align: right; }
  .o-layout--right > .o-layout__item {
    text-align: left; }

/**
 * Fill up the layout system from the left-hand side. This will likely only be
 * needed when using in conjunction with `.o-layout--reverse`.
 */
.o-layout--left {
  text-align: left; }
  .o-layout--left > .o-layout__item {
    text-align: left; }

/**
 * Reverse the rendered order of the grid system.
 */
.o-layout--reverse {
  direction: rtl; }
  .o-layout--reverse > .o-layout__item {
    direction: ltr; }

/* Auto-widths modifier
   ========================================================================== */
/**
 * Cause layout items to take up a non-explicit amount of width.
 */
.o-layout--auto > .o-layout__item {
  width: auto; }

/* ==========================================================================
   #MEDIA
   ========================================================================== */
/**
 * Place any image- and text-like content side-by-side, as per:
 * http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code
 */
.o-media {
  display: block; }
  .o-media:after {
    content: "" !important;
    display: block !important;
    clear: both !important; }

.o-media__img {
  float: left;
  margin-right: 24px; }
  .o-media__img > img {
    display: block; }

.o-media__body {
  overflow: hidden;
  display: block; }
  .o-media__body,
  .o-media__body > :last-child {
    margin-bottom: 0; }

/* Size variants
   ========================================================================== */
/**
 * Modify the amount of space between our image and our text. We also have
 * reversible options for all available sizes.
 */
.o-media--flush > .o-media__img {
  margin-right: 0;
  margin-left: 0; }

.o-media--tiny > .o-media__img {
  margin-right: 6px; }

.o-media--tiny.o-media--reverse > .o-media__img {
  margin-right: 0;
  margin-left: 6px; }

.o-media--small > .o-media__img {
  margin-right: 12px; }

.o-media--small.o-media--reverse > .o-media__img {
  margin-right: 0;
  margin-left: 12px; }

.o-media--large > .o-media__img {
  margin-right: 48px; }

.o-media--large.o-media--reverse > .o-media__img {
  margin-right: 0;
  margin-left: 48px; }

.o-media--huge > .o-media__img {
  margin-right: 96px; }

.o-media--huge.o-media--reverse > .o-media__img {
  margin-right: 0;
  margin-left: 96px; }

/* Reversed media objects
   ========================================================================== */
.o-media--reverse > .o-media__img {
  float: right;
  margin-right: 0;
  margin-left: 24px; }

/* ==========================================================================
   #FLAG
   ========================================================================== */
/**
 * The flag object is a design pattern similar to the media object, however it
 * utilises `display: table[-cell];` to give us control over the vertical
 * alignments of the text and image.
 *
 * http://csswizardry.com/2013/05/the-flag-object/
 *
 * 1. Allows us to control vertical alignments.
 * 2. Force the object to be the full width of its parent. Combined with [1],
 *    this makes the object behave in a quasi-`display: block;` manner.
 * 3. Reset inherited `border-spacing` declarations.
 */
.o-flag {
  display: table;
  /* [1] */
  width: 100%;
  /* [2] */
  border-spacing: 0;
  /* [3] */ }

/**
   * Items within a flag object. There should only ever be one of each.
   *
   * 1. Default to aligning content to their middles.
   */
.o-flag__img,
.o-flag__body {
  display: table-cell;
  vertical-align: middle;
  /* [1] */ }

/**
   * Flag images have a space between them and the body of the object.
   *
   * 1. Force `.o-flag__img` to take up as little space as possible:
   *    https://pixelsvsbytes.com/2012/02/this-css-layout-grid-is-no-holy-grail/
   */
.o-flag__img {
  width: 1px;
  /* [1] */
  padding-right: 24px;
  /**
     * 1. Fixes problem with images disappearing.
     *
     *    The direct child selector '>' needs to remain in order for nested flag
     *    objects to not inherit their parent’s formatting. In case the image tag
     *    is wrapped into another tag, e.g. an anchor for linking reasons, it will
     *    disappear. In that case try wrapping the whole o-flag__img object into
     *    an anchor tag.
     *
     *    E.g.:
     *
     *      <a href="/">
     *        <div class="o-flag__img">
     *          <img src="./link/to/image.jpg" alt="image alt text">
     *        </div>
     *      </a>
     */ }
  .o-flag__img > img {
    max-width: none;
    /* [1] */ }

/**
   * The container for the main content of the flag object.
   *
   * 1. Forces the `.flag__body` to take up all remaining space.
   */
.o-flag__body {
  width: auto;
  /* [1] */ }
  .o-flag__body,
  .o-flag__body > :last-child {
    margin-bottom: 0; }

/* Size variants
   ========================================================================== */
.o-flag--flush > .o-flag__img {
  padding-right: 0;
  padding-left: 0; }

.o-flag--tiny > .o-flag__img {
  padding-right: 6px; }

.o-flag--tiny.o-flag--reverse > .o-flag__img {
  padding-right: 0;
  padding-left: 6px; }

.o-flag--small > .o-flag__img {
  padding-right: 12px; }

.o-flag--small.o-flag--reverse > .o-flag__img {
  padding-right: 0;
  padding-left: 12px; }

.o-flag--large > .o-flag__img {
  padding-right: 48px; }

.o-flag--large.o-flag--reverse > .o-flag__img {
  padding-right: 0;
  padding-left: 48px; }

.o-flag--huge > .o-flag__img {
  padding-right: 96px; }

.o-flag--huge.o-flag--reverse > .o-flag__img {
  padding-right: 0;
  padding-left: 96px; }

/* Reversed flag
   ========================================================================== */
/**
 * 1. Swap the rendered direction of the object…
 * 2. …and reset it.
 * 3. Reassign margins to the correct sides.
 */
.o-flag--reverse {
  direction: rtl;
  /* [1] */ }
  .o-flag--reverse > .o-flag__img,
  .o-flag--reverse > .o-flag__body {
    direction: ltr;
    /* [2] */ }
  .o-flag--reverse > .o-flag__img {
    padding-right: 0;
    /* [3] */
    padding-left: 24px;
    /* [3] */ }

/* Alignment variants
   ========================================================================== */
/**
 * Vertically align the image- and body-content differently. Defaults to middle.
 */
.o-flag--top > .o-flag__img,
.o-flag--top > .o-flag__body {
  vertical-align: top; }

.o-flag--bottom > .o-flag__img,
.o-flag--bottom > .o-flag__body {
  vertical-align: bottom; }

/* ==========================================================================
   #LIST-BARE
   ========================================================================== */
/**
 * Strip list-like appearance from lists by removing their bullets and any
 * indentation.
 *
 * Note: Declaring the item class might not be necessary everywhere,
 * but is for example in <dl> lists for the <dd> children.
 */
.o-list-bare {
  list-style: none;
  margin-left: 0; }

.o-list-bare__item {
  margin-left: 0; }

/* ==========================================================================
   #LIST-INLINE
   ========================================================================== */
/**
 * The list-inline object simply displays a list of items in one line.
 */
.o-list-inline {
  margin-left: 0;
  list-style: none; }

.o-list-inline__item {
  display: inline-block; }

/* ==========================================================================
   #BOX
   ========================================================================== */
/**
 * The box object simply boxes off content. Extend with cosmetic styles in the
 * Components layer.
 *
 * 1. So we can apply the `.o-box` class to naturally-inline elements.
 */
.o-box {
  display: block;
  /* [1] */
  padding: 24px; }
  .o-box:after {
    content: "" !important;
    display: block !important;
    clear: both !important; }
  .o-box > :last-child {
    margin-bottom: 0; }

/* Size variants
   ========================================================================== */
.o-box--flush {
  padding: 0; }

.o-box--tiny {
  padding: 6px; }

.o-box--small {
  padding: 12px; }

.o-box--large {
  padding: 48px; }

.o-box--huge {
  padding: 96px; }

/* ==========================================================================
   #BLOCK
   ========================================================================== */
/**
 * Stacked image-with-text object. A simple abstraction to cover a very commonly
 * occurring design pattern.
 */
.o-block {
  display: block;
  text-align: center; }

.o-block__img {
  margin-bottom: 24px;
  /* Size variants
       ====================================================================== */ }
  .o-block--flush > .o-block__img {
    margin-bottom: 0; }
  .o-block--tiny > .o-block__img {
    margin-bottom: 6px; }
  .o-block--small > .o-block__img {
    margin-bottom: 12px; }
  .o-block--large > .o-block__img {
    margin-bottom: 48px; }
  .o-block--huge > .o-block__img {
    margin-bottom: 96px; }

.o-block__body {
  display: block; }

/* Alignment variants
   ========================================================================== */
.o-block--right {
  text-align: right; }

.o-block--left {
  text-align: left; }

/* ==========================================================================
   #RATIO
   ========================================================================== */
/**
 * Create ratio-bound content blocks, to keep media (e.g. images, videos) in
 * their correct aspect ratios.
 *
 * http://alistapart.com/article/creating-intrinsic-ratios-for-video
 *
 * 1. Default is a 1:1 ratio (i.e. a perfect square).
 */
.o-ratio {
  position: relative;
  display: block; }
  .o-ratio:before {
    content: "";
    display: block;
    width: 100%;
    padding-bottom: 100%;
    /* [1] */ }

.o-ratio__content,
.o-ratio > iframe,
.o-ratio > embed,
.o-ratio > object {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  height: 100%;
  width: 100%; }

/* Ratio variants.
   ========================================================================== */
/**
 * Generate a series of ratio classes to be used like so:
 *
 *   <div class="o-ratio  o-ratio--golden-ratio">
 *
 */
.o-ratio--2\:1:before {
  padding-bottom: 50%; }

.o-ratio--4\:3:before {
  padding-bottom: 75%; }

.o-ratio--16\:9:before {
  padding-bottom: 56.25%; }

.o-ratio--21\:10:before {
  padding-bottom: 47.61905%; }

.o-ratio--custom-one:before {
  padding-bottom: 33.14249%; }

@media only screen and (min-width: 1440px) {
  .o-ratio--2\:1\@1440:before {
    padding-bottom: 50%; }
  .o-ratio--4\:3\@1440:before {
    padding-bottom: 75%; }
  .o-ratio--16\:9\@1440:before {
    padding-bottom: 56.25%; }
  .o-ratio--21\:10\@1440:before {
    padding-bottom: 47.61905%; }
  .o-ratio--custom-one\@1440:before {
    padding-bottom: 33.14249%; } }

/* Contain modifier.
   ========================================================================== */
/**
 * Only works with image content.
 * Contains the image to the boundaries, without cropping or stretching it.
 */
.o-ratio--img-contain > .o-ratio__content {
  height: auto;
  margin: auto;
  max-height: 100%;
  max-width: 100%;
  width: auto; }

/* ==========================================================================
   #CROP
   ========================================================================== */
/**
 * Provide a cropping container in order to display media (usually images)
 * cropped to certain ratios.
 *
 * 1. Set up a positioning context in which the image can sit.
 * 2. This is the crucial part: where the cropping happens.
 */
.o-crop {
  position: relative;
  /* [1] */
  display: block;
  overflow: hidden;
  /* [2] */ }

/**
   * Apply this class to the content (usually `img`) that needs cropping.
   *
   * 1. Image’s default positioning is top-left in the cropping box.
   * 2. Make sure the media doesn’t stop itself too soon.
   */
.o-crop__content {
  position: absolute;
  top: 0;
  /* [1] */
  left: 0;
  /* [1] */
  max-width: none;
  /* [2] */ }

/**
   * We can position the media in different locations within the cropping area.
   */
.o-crop__content--left-top {
  left: 0; }

.o-crop__content--left-center {
  top: 50%;
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%); }

.o-crop__content--left-bottom {
  top: auto;
  bottom: 0; }

.o-crop__content--right-top {
  right: 0;
  left: auto; }

.o-crop__content--right-center {
  top: 50%;
  right: 0;
  left: auto;
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%); }

.o-crop__content--right-bottom {
  top: auto;
  right: 0;
  bottom: 0;
  left: auto; }

.o-crop__content--center-top {
  left: 50%;
  -webkit-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
          transform: translateX(-50%); }

.o-crop__content--center,
.o-crop__content--center-center {
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%); }

.o-crop__content--center-bottom {
  top: auto;
  bottom: 0;
  left: 50%;
  -webkit-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
          transform: translateX(-50%); }

/* Crop-ratio variants
   ========================================================================== */
/**
 * Generate a series of crop classes to be used like so:
 *
 *   <div class="o-crop  o-crop--golden-ratio">
 *
 */
.o-crop--2\:1 {
  padding-bottom: 50%; }

.o-crop--4\:3 {
  padding-bottom: 75%; }

.o-crop--16\:9 {
  padding-bottom: 56.25%; }

/* Fill modifier
   ========================================================================== */
/**
 * Content stretches to fill it's container while maintaining aspect-ratio.
 */
.o-crop--fill > .o-crop__content {
  min-height: 100%;
  min-width: 100%; }

/* ==========================================================================
   #TABLE
   ========================================================================== */
/**
 * A simple object for manipulating the structure of HTML `table`s.
 */
.o-table {
  width: 100%; }

/* Equal-width table cells
   ========================================================================== */
/**
 * `table-layout: fixed` forces all cells within a table to occupy the same
 * width as each other. This also has performance benefits: because the browser
 * does not need to (re)calculate cell dimensions based on content it discovers,
 * the table can be rendered very quickly. Further reading:
 * https://developer.mozilla.org/en-US/docs/Web/CSS/table-layout#Values
 */
.o-table--fixed {
  table-layout: fixed; }

/* Size variants
   ========================================================================== */
.o-table--tiny th,
.o-table--tiny td {
  padding: 6px; }

.o-table--small th,
.o-table--small td {
  padding: 12px; }

.o-table--large th,
.o-table--large td {
  padding: 48px; }

.o-table--huge th,
.o-table--huge td {
  padding: 96px; }

/* ==========================================================================
   #PACK
   ========================================================================== */
/**
 * The pack object simply causes any number of elements pack up horizontally to
 * automatically fill an equal, fluid width of their parent.
 *
 * 1. Fill all available space.
 * 2. Remove any leftover styling from lists.
 * 3. Cause children to be automatically equally sized.
 */
.o-pack {
  width: 100%;
  /* [1] */
  margin-left: 0;
  /* [2] */
  display: table;
  table-layout: fixed;
  /* [3] */ }

/**
   * 1. Cause children to adopt table-like structure.
   * 2. Default item alignment is with the tops of each other.
   */
.o-pack__item {
  display: table-cell;
  /* [1] */
  vertical-align: top;
  /* [2] */
  /* Vertical alignment variants
       ====================================================================== */ }
  .o-pack--middle > .o-pack__item {
    vertical-align: middle; }
  .o-pack--bottom > .o-pack__item {
    vertical-align: bottom; }

/* Unequal-width items
   ========================================================================== */
.o-pack--auto {
  table-layout: auto; }

/* Size variants
   ========================================================================== */
.o-pack--tiny {
  border-spacing: 6px; }

.o-pack--small {
  border-spacing: 12px; }

.o-pack--default {
  border-spacing: 24px; }

.o-pack--large {
  border-spacing: 48px; }

.o-pack--huge {
  border-spacing: 96px; }

/* Reversed order packs
   ========================================================================== */
.o-pack--reverse {
  direction: rtl; }
  .o-pack--reverse > .o-pack__item {
    direction: ltr; }

.home .c-header {
  height: 100vh; }

.c-header {
  margin-bottom: 114px; }
  .c-header.-mb-0 {
    margin-bottom: 0; }
  .c-header .c-header_nav {
    background: #FFF;
    position: relative;
    z-index: 6; }
    .c-header .c-header_nav .c-navigation {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-transition: all 0.15s linear;
      transition: all 0.15s linear; }
      .c-header .c-header_nav .c-navigation .c-header_logo {
        padding: 28px 0;
        margin-right: auto; }
      .c-header .c-header_nav .c-navigation .c-header_logo, .c-header .c-header_nav .c-navigation .c-header_links, .c-header .c-header_nav .c-navigation .c-header_button {
        -webkit-box-flex: 0;
            -ms-flex: 0 auto;
                flex: 0 auto;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-align: center;
            -ms-flex-align: center;
                align-items: center; }
  .c-header .c-navigation_ul {
    margin-bottom: 0; }
    .c-header .c-navigation_ul li {
      display: inline-block;
      margin-right: 40px; }
      .c-header .c-navigation_ul li, .c-header .c-navigation_ul li * {
        font-size: 14px;
        color: #1F1E1E;
        font-weight: 600;
        line-height: 24px;
        letter-spacing: 2.97px; }
      .c-header .c-navigation_ul li a {
        text-decoration: none; }
      .c-header .c-navigation_ul li.c-language-switcher a {
        text-transform: uppercase; }
      .c-header .c-navigation_ul li.c-facebook a {
        display: block;
        height: 23px;
        width: 10px;
        background: url(../images/icons/excavation-l-martel-header-facebook.svg); }

.-js-menu-active .c-menu_dropdown {
  top: 114px;
  -webkit-transition: top 0.4s linear;
  transition: top 0.4s linear; }

.-js-menu-active .c-menu_dropdown li a, .-js-menu-active .c-menu_dropdown li {
  opacity: 1;
  transform: translateY(0);
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0); }

.c-menu_dropdown {
  position: absolute;
  width: 100vw;
  background: rgba(0, 0, 0, 0.8);
  height: calc(100vh - 114px);
  z-index: 3;
  top: -120vh;
  -webkit-transition: top 0.5s 0.2s linear;
  transition: top 0.5s 0.2s linear;
  padding-top: 88px; }
  .c-menu_dropdown * {
    color: #FFF;
    font-size: 32px;
    margin-bottom: 42px;
    font-weight: 700;
    text-transform: uppercase;
    text-decoration: none; }
  .c-menu_dropdown li:nth-child(1) {
    -webkit-transition-delay: .4s;
            transition-delay: .4s; }
  .c-menu_dropdown li:nth-child(2) {
    -webkit-transition-delay: .5s;
            transition-delay: .5s; }
  .c-menu_dropdown li:nth-child(3) {
    -webkit-transition-delay: .6s;
            transition-delay: .6s; }
  .c-menu_dropdown li:nth-child(4) {
    -webkit-transition-delay: .7s;
            transition-delay: .7s; }
  .c-menu_dropdown li:nth-child(5) {
    -webkit-transition-delay: .8s;
            transition-delay: .8s; }
  .c-menu_dropdown li:nth-child(6) {
    -webkit-transition-delay: 0.9s;
            transition-delay: 0.9s; }
  .c-menu_dropdown li:nth-child(7) {
    -webkit-transition-delay: 1s;
            transition-delay: 1s; }
  .c-menu_dropdown li, .c-menu_dropdown a {
    font-size: 20px;
    margin-bottom: 26px;
    padding-left: 0;
    width: 100%;
    opacity: 0;
    -webkit-transition: opacity 0.4s cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 0.4s cubic-bezier(0.4, 0, 0.2, 1) 0.4s;
    transition: opacity 0.4s cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 0.4s cubic-bezier(0.4, 0, 0.2, 1) 0.4s;
    transition: opacity 0.4s cubic-bezier(0.4, 0, 0.2, 1), transform 0.4s cubic-bezier(0.4, 0, 0.2, 1) 0.4s;
    transition: opacity 0.4s cubic-bezier(0.4, 0, 0.2, 1), transform 0.4s cubic-bezier(0.4, 0, 0.2, 1) 0.4s, -webkit-transform 0.4s cubic-bezier(0.4, 0, 0.2, 1) 0.4s;
    -webkit-transform: translateY(-1rem);
    -ms-transform: translateY(-1rem);
    transform: translateY(-1rem); }
  .c-menu_dropdown .c-depth-one {
    position: absolute;
    left: 50%;
    margin-top: -28px; }
    .c-menu_dropdown .c-depth-one.-js-submenu-active {
      display: block; }
      .c-menu_dropdown .c-depth-one.-js-submenu-active li a, .c-menu_dropdown .c-depth-one.-js-submenu-active li {
        opacity: 1;
        transform: translateY(0);
        -webkit-transform: translateX(0);
        -ms-transform: translateX(0);
        transform: translateX(0); }
      .c-menu_dropdown .c-depth-one.-js-submenu-active > li:nth-child(1) {
        -webkit-transition-delay: .2s;
                transition-delay: .2s; }
      .c-menu_dropdown .c-depth-one.-js-submenu-active > li:nth-child(2) {
        -webkit-transition-delay: .3s;
                transition-delay: .3s; }
      .c-menu_dropdown .c-depth-one.-js-submenu-active > li:nth-child(3) {
        -webkit-transition-delay: .4s;
                transition-delay: .4s; }
      .c-menu_dropdown .c-depth-one.-js-submenu-active > li:nth-child(4) {
        -webkit-transition-delay: .5s;
                transition-delay: .5s; }
      .c-menu_dropdown .c-depth-one.-js-submenu-active > li:nth-child(5) {
        -webkit-transition-delay: .6s;
                transition-delay: .6s; }
      .c-menu_dropdown .c-depth-one.-js-submenu-active > li:nth-child(6) {
        -webkit-transition-delay: 0.7s;
                transition-delay: 0.7s; }
      .c-menu_dropdown .c-depth-one.-js-submenu-active > li:nth-child(7) {
        -webkit-transition-delay: 0.8s;
                transition-delay: 0.8s; }
    .c-menu_dropdown .c-depth-one li, .c-menu_dropdown .c-depth-one a {
      font-size: 20px;
      margin-bottom: 26px;
      padding-left: 0;
      width: 100%;
      font-size: 1rem;
      opacity: 0;
      -webkit-transition: opacity 0.4s cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 0.4s cubic-bezier(0.4, 0, 0.2, 1) 0.4s;
      transition: opacity 0.4s cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 0.4s cubic-bezier(0.4, 0, 0.2, 1) 0.4s;
      transition: opacity 0.4s cubic-bezier(0.4, 0, 0.2, 1), transform 0.4s cubic-bezier(0.4, 0, 0.2, 1) 0.4s;
      transition: opacity 0.4s cubic-bezier(0.4, 0, 0.2, 1), transform 0.4s cubic-bezier(0.4, 0, 0.2, 1) 0.4s, -webkit-transform 0.4s cubic-bezier(0.4, 0, 0.2, 1) 0.4s;
      -webkit-transform: translateY(-1rem);
      -ms-transform: translateY(-1rem);
      transform: translateY(-1rem); }

.c-parent {
  position: relative;
  width: 100%;
  display: block; }
  .c-parent:hover {
    cursor: pointer; }
  .c-parent span {
    position: absolute;
    -webkit-transition: width 0.2s linear;
    transition: width 0.2s linear;
    content: '';
    width: 0;
    height: 2px;
    background: #FFF;
    margin-left: 24px;
    top: 50%;
    margin-top: -1px; }
    .c-parent span:before {
      position: absolute;
      content: "";
      height: 16px;
      right: 5px;
      -webkit-transform: rotate(-45deg);
      -ms-transform: rotate(-45deg);
      transform: rotate(-45deg);
      background: #FFF;
      width: 2px;
      top: -13px;
      -webkit-transition: all 0.2s 0.2s linear;
      transition: all 0.2s 0.2s linear; }
    .c-parent span:after {
      position: absolute;
      content: "";
      height: 16px;
      right: 5px;
      -webkit-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
      transform: rotate(45deg);
      background: #FFF;
      width: 2px;
      top: -2px;
      -webkit-transition: all 0.2s 0.2s linear;
      transition: all 0.2s 0.2s linear; }
  .c-parent.-js-submenu-active span {
    width: calc(50%); }
    .c-parent.-js-submenu-active span:before {
      -webkit-transform: rotate(-90deg);
          -ms-transform: rotate(-90deg);
              transform: rotate(-90deg);
      top: -7px;
      -webkit-transition: all 0.2s 0.2s linear;
      transition: all 0.2s 0.2s linear; }
    .c-parent.-js-submenu-active span:after {
      -webkit-transform: rotate(90deg);
          -ms-transform: rotate(90deg);
              transform: rotate(90deg);
      top: -7px;
      -webkit-transition: all 0.2s 0.2s linear;
      transition: all 0.2s 0.2s linear; }

.c-banner {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; }
  .c-banner .c-banner_video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: calc(100% - 114px);
    z-index: -1;
    overflow: hidden;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    top: 114px;
    background: #000; }
    .c-banner .c-banner_video iframe {
      width: 100vw;
      height: 56.25vw;
      /* Given a 16:9 aspect ratio, 9/16*100 = 56.25 */
      min-height: 100vh;
      min-width: 177.77vh;
      /* Given a 16:9 aspect ratio, 16/9*100 = 177.77 */
      position: absolute;
      top: 50%;
      left: 50%;
      -webkit-transform: translate(-50%, -50%);
          -ms-transform: translate(-50%, -50%);
              transform: translate(-50%, -50%);
      opacity: 0.7; }
  .c-banner .c-banner_hero-image {
    width: 100%; }
    .c-banner .c-banner_hero-image .c-hero-image {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      position: relative;
      height: 550px;
      background-size: cover !important; }
  .c-banner .c-banner_content {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    margin: auto;
    z-index: 1;
    padding: 0 24px;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column; }
  .c-banner .c-go-down-button {
    position: absolute;
    bottom: 10%;
    left: 50%;
    margin-left: -33px; }
    .c-banner .c-go-down-button:hover {
      cursor: pointer; }

.c-home_services {
  margin-bottom: 114px; }
  .c-home_services .c-home_services_li {
    text-align: center;
    position: relative;
    padding-bottom: 66px; }
    .c-home_services .c-home_services_li .c-home_services_wrap {
      max-width: 316px;
      margin: 0 auto; }
      .c-home_services .c-home_services_li .c-home_services_wrap h3 {
        margin-bottom: 16px; }
      .c-home_services .c-home_services_li .c-home_services_wrap .c-home_services_icon {
        margin-bottom: 14px; }
      .c-home_services .c-home_services_li .c-home_services_wrap .c-btn {
        position: absolute;
        bottom: 0;
        left: calc(50%);
        -webkit-transform: translate(-50%, 0);
            -ms-transform: translate(-50%, 0);
                transform: translate(-50%, 0);
        margin-left: 12px; }

.c-home_projets {
  margin-bottom: 114px; }
  .c-home_projets .c-home_projects_li figure {
    background: #1F1E1E;
    margin-bottom: 0;
    position: relative; }
    .c-home_projets .c-home_projects_li figure img {
      -webkit-filter: grayscale(70%);
      /* Safari 6.0 - 9.0 */
      filter: grayscale(70%);
      opacity: 0.7;
      width: 100%; }
    .c-home_projets .c-home_projects_li figure figcaption {
      position: absolute;
      height: 100%;
      width: 100%;
      padding: 56px 72px;
      top: 0; }
      .c-home_projets .c-home_projects_li figure figcaption h3 {
        color: #FFF;
        text-shadow: 0px 3px 6px rgba(0, 0, 0, 0.4); }
      .c-home_projets .c-home_projects_li figure figcaption .c-home_projets_services {
        position: absolute;
        bottom: 0;
        -webkit-transform: rotate(-90deg) translateX(0%);
            -ms-transform: rotate(-90deg) translateX(0%);
                transform: rotate(-90deg) translateX(0%);
        -webkit-transform-origin: 0 0;
            -ms-transform-origin: 0 0;
                transform-origin: 0 0; }
        .c-home_projets .c-home_projects_li figure figcaption .c-home_projets_services h4 {
          color: #FFF;
          text-shadow: 0px 3px 6px rgba(0, 0, 0, 0.4); }

.c-home_clients_ul li {
  margin-bottom: 64px; }
  .c-home_clients_ul li img {
    width: 100%; }

.c-content {
  margin-bottom: 114px;
  text-align: center; }

.c-list_ul {
  margin: 0;
  color: #FFF; }
  .c-list_ul .c-grid-container {
    display: grid;
    grid-template: repeat(1, [row] minmax(104px, 1fr))/repeat(2, [col] 1fr);
    grid-gap: 0;
    background: #29272C; }
    .c-list_ul .c-grid-container .c-grid-container__item {
      grid-row-start: 1; }
    .c-list_ul .c-grid-container.-odd .c-grid-container__item.-content {
      grid-column-start: 1; }
    .c-list_ul .c-grid-container.-odd .c-grid-container__item.-image {
      grid-column-start: 2; }
    .c-list_ul .c-grid-container.-even .c-grid-container__item.-content {
      grid-column-start: 2; }
    .c-list_ul .c-grid-container.-even .c-grid-container__item.-image {
      grid-column-start: 1; }
    .c-list_ul .c-grid-container .c-grid-container__item.-content {
      display: grid;
      margin: 0 auto;
      -webkit-box-align: center !important;
      -ms-flex-align: center !important;
      align-items: center !important;
      justify-items: center !important;
      max-width: 540px;
      padding: 88px 24px; }
    .c-list_ul .c-grid-container .c-grid-container__item.-image {
      background-size: cover !important;
      background-position: center center !important; }

.c-accordion {
  margin-bottom: 114px; }
  .c-accordion h2 {
    text-align: left; }
  .c-accordion .c-accordion_ul {
    list-style-type: none;
    margin-left: 0; }
    .c-accordion .c-accordion_ul .c-accordion_li {
      border-top: 1px solid #979797;
      padding-top: 24px; }
      .c-accordion .c-accordion_ul .c-accordion_li .c-accordion_content {
        display: none; }
      .c-accordion .c-accordion_ul .c-accordion_li h3:hover {
        cursor: pointer; }
      .c-accordion .c-accordion_ul .c-accordion_li:last-child p:last-child {
        margin-bottom: 0; }

.c-available-jobs {
  margin-bottom: 114px; }
  .c-available-jobs h2 {
    text-align: left; }
  .c-available-jobs .c-accordion_ul {
    list-style-type: none;
    margin-left: 0; }
    .c-available-jobs .c-accordion_ul .c-accordion_li {
      border-top: 1px solid #979797;
      padding-top: 24px; }
      .c-available-jobs .c-accordion_ul .c-accordion_li .c-accordion_content {
        display: none; }
      .c-available-jobs .c-accordion_ul .c-accordion_li h3:hover {
        cursor: pointer; }
      .c-available-jobs .c-accordion_ul .c-accordion_li:last-child p:last-child {
        margin-bottom: 0; }
  .c-available-jobs h3 a {
    color: #1F1E1E;
    text-decoration: none; }
  .c-available-jobs h3:hover {
    cursor: pointer; }

.c-section-w-sidebar {
  margin-bottom: 114px;
  position: relative; }
  .c-section-w-sidebar .c-btn--back {
    position: absolute;
    top: 40px;
    left: 0; }
  .c-section-w-sidebar .o-wrapper {
    position: relative; }
  .c-section-w-sidebar .c-content {
    margin-top: 144px;
    margin-bottom: 0;
    text-align: left;
    padding-right: 88px;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    margin-bottom: 114px; }
    .c-section-w-sidebar .c-content .c-accordion_ul {
      list-style-type: none;
      margin-left: 0; }
      .c-section-w-sidebar .c-content .c-accordion_ul .c-accordion_li {
        border-top: 1px solid #979797;
        padding-top: 24px; }
        .c-section-w-sidebar .c-content .c-accordion_ul .c-accordion_li .c-accordion_content {
          display: none; }
        .c-section-w-sidebar .c-content .c-accordion_ul .c-accordion_li h3:hover {
          cursor: pointer; }
        .c-section-w-sidebar .c-content .c-accordion_ul .c-accordion_li:last-child p:last-child {
          margin-bottom: 0; }
    .c-section-w-sidebar .c-content.-google-maps {
      margin-top: 0;
      padding-right: 0;
      z-index: 1;
      -webkit-box-orient: unset;
      -webkit-box-direction: unset;
          -ms-flex-direction: unset;
              flex-direction: unset;
      margin-bottom: 0 !important;
      padding-left: 0 !important; }
      @media (min-width: 320px) {
        .c-section-w-sidebar .c-content.-google-maps {
          width: 66.66%; } }
      @media (min-width: 1366px) {
        .c-section-w-sidebar .c-content.-google-maps {
          width: calc((100vw - 1366px)/2 + ((1366px/3)*2) - 8px) !important; } }
      .c-section-w-sidebar .c-content.-google-maps #google-map {
        width: 100%; }
  .c-section-w-sidebar .c-content h2 {
    text-align: left; }
  .c-section-w-sidebar .c-sidebar {
    padding: 144px 88px 124px 88px; }
    .c-section-w-sidebar .c-sidebar ul {
      margin-bottom: 0; }
      .c-section-w-sidebar .c-sidebar ul li {
        color: #FFF;
        margin-bottom: 64px; }
        .c-section-w-sidebar .c-sidebar ul li:last-child {
          margin-bottom: 0; }
        .c-section-w-sidebar .c-sidebar ul li .c-sidebar_title {
          font-size: 14px;
          line-height: 40px;
          letter-spacing: 8px;
          margin-bottom: 0;
          text-transform: uppercase; }
      .c-section-w-sidebar .c-sidebar ul span {
        font-weight: 300; }

.c-career_single .c-sidebar {
  background: #C5A37E; }

.c-project_single {
  margin-bottom: 0; }
  .c-project_single .c-sidebar {
    background: #29272C;
    position: relative; }
    .c-project_single .c-sidebar .c-sidebar_title {
      color: #C5A37E; }
    .c-project_single .c-sidebar :after {
      position: absolute;
      content: '';
      top: 0;
      width: 100vw;
      left: 100%;
      height: 100%;
      background: #29272C; }
  .c-project_single .c-project-single_content,
  .c-project_single .c-contact-us {
    margin-bottom: 114px; }

.c-contact-us,
.c-career_single {
  margin-bottom: 0; }
  .c-contact-us .c-sidebar,
  .c-career_single .c-sidebar {
    background: #C5A37E;
    position: relative; }
    .c-contact-us .c-sidebar a,
    .c-career_single .c-sidebar a {
      color: #FFF !important; }
    .c-contact-us .c-sidebar .c-sidebar_title,
    .c-career_single .c-sidebar .c-sidebar_title {
      color: #FFF; }
    .c-contact-us .c-sidebar :after,
    .c-career_single .c-sidebar :after {
      position: absolute;
      content: '';
      top: 0;
      width: 100vw;
      left: 100%;
      height: 100%;
      background: #C5A37E; }
  .c-contact-us .c-project-single_content,
  .c-contact-us .c-contact-us,
  .c-career_single .c-project-single_content,
  .c-career_single .c-contact-us {
    margin-bottom: 114px; }

.c-contact-us {
  margin-bottom: 114px; }

.c-google-maps {
  display: block;
  width: 100%;
  /* [1] */
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap; }
  .c-google-maps .-google-maps,
  .c-google-maps -aside {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }

@media (min-width: 320px) {
  .-aside {
    width: 33.33%; } }

@media (min-width: 1366px) {
  .-aside {
    width: calc(1366px/3 - 16px); } }

.c-projects {
  margin-bottom: 114px; }
  .c-projects ul {
    margin-bottom: -24px; }
    .c-projects ul .c-projects_li {
      margin-bottom: 24px;
      display: none; }
      .c-projects ul .c-projects_li figure {
        background: #1F1E1E;
        margin-bottom: 0;
        position: relative; }
        .c-projects ul .c-projects_li figure img {
          -webkit-filter: grayscale(70%);
          /* Safari 6.0 - 9.0 */
          filter: grayscale(70%);
          opacity: 0.7;
          width: 100%; }
        .c-projects ul .c-projects_li figure figcaption {
          position: absolute;
          height: 100%;
          width: 100%;
          padding: 56px 72px;
          top: 0; }
          .c-projects ul .c-projects_li figure figcaption h3 {
            color: #FFF;
            text-shadow: 0px 3px 6px rgba(0, 0, 0, 0.4); }
          .c-projects ul .c-projects_li figure figcaption .c-projects_services {
            position: absolute;
            bottom: 0;
            -webkit-transform: rotate(-90deg) translateX(0%);
                -ms-transform: rotate(-90deg) translateX(0%);
                    transform: rotate(-90deg) translateX(0%);
            -webkit-transform-origin: 0 0;
                -ms-transform-origin: 0 0;
                    transform-origin: 0 0; }
            .c-projects ul .c-projects_li figure figcaption .c-projects_services h4 {
              color: #FFF;
              text-shadow: 0px 3px 6px rgba(0, 0, 0, 0.4); }

.entry {
  background: #FFF;
  border: 1px solid rgba(0, 0, 0, 0.15);
  -webkit-box-shadow: -10px 10px 10px -10px rgba(0, 0, 0, 0.35), -10px 10px 0 -3px rgba(0, 0, 0, 0.2);
          box-shadow: -10px 10px 10px -10px rgba(0, 0, 0, 0.35), -10px 10px 0 -3px rgba(0, 0, 0, 0.2);
  margin: 10px auto 20px;
  overflow: hidden;
  padding: 20px 40px;
  position: relative;
  text-align: center; }

.entry > p {
  padding: 20px 0 10px; }

.entry > .grid {
  margin: 20px auto 0px; }

.entry > .grid > .item {
  width: 50%; }

.grid {
  max-width: 100vw;
  list-style: none;
  padding: 1; }

.grid .item {
  display: block;
  float: left;
  width: 50%;
  opacity: 1; }

.grid .item a, .grid .item img {
  outline: none;
  border: none;
  display: block;
  max-width: 100%;
  width: 100%; }

.grid.effect-2 .item.animate {
  -webkit-transform: translateY(200px);
  -ms-transform: translateY(200px);
      transform: translateY(200px);
  -webkit-animation: moveUp 0.65s ease forwards;
  animation: moveUp 0.65s ease forwards; }

@-webkit-keyframes moveUp {
  0% { }
  100% {
    -webkit-transform: translateY(0);
    opacity: 1; } }

@keyframes moveUp {
  0% { }
  100% {
    -webkit-transform: translateY(0);
    transform: translateY(0);
    opacity: 1; } }

@media screen and (max-width: 900px) {
  .grid .item {
    width: 50%; }
  .entry {
    -webkit-box-shadow: none;
            box-shadow: none; }
  .entry > .grid > .item {
    width: 50%; } }

@media screen and (max-width: 400px) {
  .grid .item {
    width: 100%; }
  .entry {
    padding: 20px 0; }
  .entry > p {
    padding: 10px; }
  .entry > .grid > .item {
    width: 100%; } }

.c-project_navigation {
  position: absolute;
  width: 100%;
  margin-top: 266px; }
  .c-project_navigation .c-project_navigation_prev,
  .c-project_navigation .c-project_navigation_next {
    z-index: 1;
    position: absolute;
    width: 56px;
    height: 56px;
    display: block;
    background: #C5A37E;
    text-indent: -9999px; }
    .c-project_navigation .c-project_navigation_prev span,
    .c-project_navigation .c-project_navigation_next span {
      background: url("../images/icons/arrows.svg") no-repeat;
      height: 15px;
      width: 24px;
      background-size: cover !important;
      position: absolute;
      left: 16px;
      top: 20px; }
  .c-project_navigation .c-project_navigation_next {
    right: 0; }
    .c-project_navigation .c-project_navigation_next span {
      background-position: -28px 0; }

.c-form_wrap {
  max-width: 810px;
  margin: 0 auto; }
  .c-form_wrap input[type="text"],
  .c-form_wrap input[type="email"] {
    height: 80px; }
  .c-form_wrap .o-layout__item textarea ~ label,
  .c-form_wrap .o-layout__item input[type="text"] ~ label,
  .c-form_wrap .o-layout__item input[type="email"] ~ label {
    left: 34px; }
  .c-form_wrap textarea,
  .c-form_wrap input[type="text"],
  .c-form_wrap input[type="email"] {
    border: 2px solid #C5A37E;
    border-radius: 6px;
    margin-bottom: 24px;
    padding: 0 10px;
    background-color: transparent;
    font: 16px/24px "Lato", Arial, sans-serif;
    color: #1F1E1E;
    width: 100%;
    -webkit-box-sizing: border-box;
            box-sizing: border-box;
    letter-spacing: 1px; }
    .c-form_wrap textarea ~ label,
    .c-form_wrap input[type="text"] ~ label,
    .c-form_wrap input[type="email"] ~ label {
      position: absolute;
      left: 10px;
      width: 100%;
      top: 50%;
      color: #C5A37E;
      -webkit-transition: 0.3s;
      transition: 0.3s;
      z-index: -1;
      letter-spacing: 1.75px;
      line-height: 30px;
      text-transform: uppercase;
      -webkit-transform: translate(0, calc(-50% - 12px));
          -ms-transform: translate(0, calc(-50% - 12px));
              transform: translate(0, calc(-50% - 12px));
      font-weight: 600; }
    .c-form_wrap textarea:focus ~ label,
    .c-form_wrap textarea.has-content ~ label,
    .c-form_wrap input[type="text"]:focus ~ label,
    .c-form_wrap input[type="text"].has-content ~ label,
    .c-form_wrap input[type="email"]:focus ~ label,
    .c-form_wrap input[type="email"].has-content ~ label {
      top: 28px;
      font-size: 12px;
      color: #C5A37E;
      -webkit-transition: 0.3s;
      transition: 0.3s; }
    .c-form_wrap textarea:focus,
    .c-form_wrap input[type="text"]:focus,
    .c-form_wrap input[type="email"]:focus {
      outline: none; }
  .c-form_wrap textarea {
    padding-top: 32px;
    margin-bottom: 16px; }
    .c-form_wrap textarea ~ label {
      top: 52px; }
  .c-form_wrap .o-layout input {
    width: 100%; }
  .c-form_wrap .c-input {
    float: left;
    width: 100%;
    position: relative; }

.services {
  background: #29272C; }
  .services .-bg-zero,
  .services .c-header {
    background: #29272C; }
  .services .c-services_flex {
    position: relative; }
  .services .c-image {
    position: absolute;
    width: 66%;
    height: 100%;
    top: 0;
    margin-top: -80px; }
    .services .c-image img {
      width: 100%; }
  .services .c-services_content {
    width: 45%;
    padding: 80px 48px 134px;
    text-align: left;
    color: #FFF;
    position: relative;
    z-index: 1; }
    .services .c-services_content h2 {
      text-align: left; }
  .services .c-services-zero {
    margin-bottom: 56px; }
    .services .c-services-zero .c-services_content {
      background: #C5A37E;
      margin-top: calc(114px + 80px); }
    .services .c-services-zero .c-image {
      right: 0; }
  .services .c-services-one {
    margin-bottom: 56px; }
    .services .c-services-one .c-services_content {
      background: #1F1E1E;
      margin-left: auto;
      margin-top: 136px; }
    .services .c-services-one .c-image {
      left: 0; }
  .services .c-services-two {
    margin-bottom: 50px; }
    .services .c-services-two .c-services_content {
      background: #C5A37E;
      margin-top: 136px; }
    .services .c-services-two .c-image {
      right: 0; }
  .services ul {
    list-style-type: none;
    margin-left: 0; }

.c-navigation_projects {
  margin-bottom: 57px; }
  .c-navigation_projects ul {
    text-align: center;
    margin-bottom: 0; }
    .c-navigation_projects ul li {
      font-family: 'Oswald', sans-serif;
      font-size: 18px;
      line-height: 30px;
      letter-spacing: 1.75px;
      text-transform: uppercase;
      text-align: center;
      margin-left: 116px;
      color: #C5A37E;
      position: relative; }
      .c-navigation_projects ul li.active {
        color: #1F1E1E; }
      .c-navigation_projects ul li:focus {
        outline: none; }
      .c-navigation_projects ul li:hover {
        cursor: pointer;
        color: #1F1E1E; }
      .c-navigation_projects ul li.slick-slide:after {
        display: none; }
      .c-navigation_projects ul li.slick-active:after {
        display: block;
        position: absolute;
        content: "";
        height: 9px;
        width: 9px;
        border-radius: 100%;
        background: #C5A37E;
        right: -58px;
        top: 50%;
        -webkit-transform: translate(0, -50%);
            -ms-transform: translate(0, -50%);
                transform: translate(0, -50%); }
      .c-navigation_projects ul li:first-child {
        margin-left: 0; }

.c-contact-us_link_bg {
  background-size: cover !important;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; }
  .c-contact-us_link_bg.o-ratio:before {
    width: 0; }
  .c-contact-us_link_bg .o-wrapper {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    margin: auto;
    z-index: 1;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column; }
    .c-contact-us_link_bg .o-wrapper h5 {
      text-align: center;
      margin-bottom: 56px; }

.c-footer * {
  color: #FFF; }

.c-footer .c-footer_info {
  padding: 64px 0;
  background-color: #29272C; }
  .c-footer .c-footer_info .c-footer_title {
    font-size: 18px;
    line-height: 30px;
    font-weight: 700; }
  .c-footer .c-footer_info .c-facebook {
    display: block;
    height: 18px;
    width: 10px;
    background: url(../images/icons/excavation-l-martel-footer-facebook.svg); }

.c-footer .c-footer_copyright {
  background-color: #1F1E1E;
  text-align: center;
  padding: 16px 0; }

/* ==========================================================================
   #BUTTONS
   ========================================================================== */
/**
 * This is an example component. Extend inuitcss by building your own components
 * that make up your UI. Component classes are prefixed with a `c-`.
 */
/**
 * 1. Allow us to style box model properties.
 * 2. Line different sized buttons up a little nicer.
 * 3. Make buttons inherit font styles (often necessary when styling `input`s as
 *    buttons).
 * 4. Reset/normalize some styles.
 * 5. Force all button-styled elements to appear clickable.
 */
.c-btn {
  display: inline-block;
  /* [1] */
  vertical-align: middle;
  /* [2] */
  font: inherit;
  /* [3] */
  text-align: center;
  /* [4] */
  margin: 0;
  /* [4] */
  cursor: pointer;
  /* [5] */
  padding: 16px 32px;
  -webkit-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
  border-radius: 6px; }

/* Style variants
   ========================================================================== */
.c-btn--primary {
  background-color: transparent;
  border: #C5A37E 2px solid;
  text-transform: uppercase;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content; }
  .c-btn--primary, .c-btn--primary:hover, .c-btn--primary:active, .c-btn--primary:focus {
    text-decoration: none;
    /* [4] */
    color: #1F1E1E; }

.c-btn--secondary {
  background-color: #C5A37E;
  border: #C5A37E 2px solid;
  text-transform: uppercase;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content; }
  .c-btn--secondary, .c-btn--secondary:hover, .c-btn--secondary:active, .c-btn--secondary:focus {
    text-decoration: none;
    /* [4] */
    color: #1F1E1E; }
  .c-btn--secondary.-form {
    font-size: 24px;
    height: 80px;
    font-weight: 600;
    line-height: 30px;
    letter-spacing: 3px; }

.c-btn--tertiary {
  background-color: #fff;
  color: #4a8ec2; }
  .c-btn--tertiary, .c-btn--tertiary:hover, .c-btn--tertiary:active, .c-btn--tertiary:focus {
    text-decoration: none;
    color: #4a8ec2; }
  .c-btn--tertiary:hover, .c-btn--tertiary:focus {
    color: #3774a2; }

/* Size variants
   ========================================================================== */
.c-btn--small {
  padding: 6px 12px; }

.c-btn--large {
  padding: 24px 48px; }

/* Ghost buttons
   ========================================================================== */
/**
 * Ghost buttons have see-through backgrounds and are bordered.
 */
.c-btn--ghost {
  border: 2px solid currentColor;
  padding: 10px 22px; }
  .c-btn--ghost, .c-btn--ghost:hover, .c-btn--ghost:active, .c-btn--ghost:focus {
    background: none; }
  .c-btn--ghost.c-btn--small {
    padding: 4px 10px; }
  .c-btn--ghost.c-btn--large {
    padding: 22px 46px; }
  .c-btn--ghost.c-btn--primary {
    color: #4a8ec2; }
    .c-btn--ghost.c-btn--primary:hover, .c-btn--ghost.c-btn--primary:focus {
      color: #3774a2; }
  .c-btn--ghost.c-btn--secondary {
    color: #2f4054; }
    .c-btn--ghost.c-btn--secondary:hover, .c-btn--ghost.c-btn--secondary:focus {
      color: #1d2733; }
  .c-btn--ghost.c-btn--tertiary {
    color: #fff; }
    .c-btn--ghost.c-btn--tertiary:hover, .c-btn--ghost.c-btn--tertiary:focus {
      color: #fff; }

/* ==========================================================================
   #CLEARFIX
   ========================================================================== */
/**
 * Attach our clearfix mixin to a utility class.
 */
.u-clearfix:after {
  content: "" !important;
  display: block !important;
  clear: both !important; }

/* ==========================================================================
   #WIDTHS
   ========================================================================== */
/**
 * inuitcss generates a series of utility classes that give a fluid width to
 * whichever element they’re applied, e.g.:
 *
 *   <img src="" alt="" class="u-1/2" />
 *
 * These classes are most commonly used in conjunction with our layout system,
 * e.g.:
 *
 *   <div class="o-layout__item  u-1/2">
 *
 * By default, inuitcss will also generate responsive variants of each of these
 * classes by using your Sass MQ configuration, e.g.:
 *
 *   <div class="o-layout__item  u-1/1  u-1/2@tablet  u-1/3@desktop">
 *
 * Optionally, inuitcss can generate offset classes which can push and pull
 * elements left and right by a specified amount, e.g.:
 *
 *   <div class="o-layout__item  u-2/3  u-pull-1/3">
 *
 * This is useful for making very granular changes to the rendered order of
 * items in a layout.
 *
 * N.B. This option is turned off by default.
 */
/**
 * A series of width helper classes that you can use to size things like grid
 * systems. Classes take a fraction-like format (e.g. `.u-2/3`). Use these in
 * your markup:
 *
 * <div class="u-7/12">
 *
 * The following will generate widths helper classes based on the fractions
 * defined in the `$inuit-fractions` list.
 */
.u-1\/1 {
  width: 100% !important; }

/**
         * 1. Reset any leftover or conflicting `left`/`right` values.
         */
.u-push-1\/1 {
  position: relative !important;
  right: auto !important;
  /* [1] */
  left: 100% !important; }

.u-pull-1\/1 {
  position: relative !important;
  right: 100% !important;
  left: auto !important;
  /* [1] */ }

.u-1\/2 {
  width: 50% !important; }

/**
         * 1. Reset any leftover or conflicting `left`/`right` values.
         */
.u-push-1\/2 {
  position: relative !important;
  right: auto !important;
  /* [1] */
  left: 50% !important; }

.u-pull-1\/2 {
  position: relative !important;
  right: 50% !important;
  left: auto !important;
  /* [1] */ }

.u-2\/2 {
  width: 100% !important; }

/**
         * 1. Reset any leftover or conflicting `left`/`right` values.
         */
.u-push-2\/2 {
  position: relative !important;
  right: auto !important;
  /* [1] */
  left: 100% !important; }

.u-pull-2\/2 {
  position: relative !important;
  right: 100% !important;
  left: auto !important;
  /* [1] */ }

.u-1\/3 {
  width: 33.33333% !important; }

/**
         * 1. Reset any leftover or conflicting `left`/`right` values.
         */
.u-push-1\/3 {
  position: relative !important;
  right: auto !important;
  /* [1] */
  left: 33.33333% !important; }

.u-pull-1\/3 {
  position: relative !important;
  right: 33.33333% !important;
  left: auto !important;
  /* [1] */ }

.u-2\/3 {
  width: 66.66667% !important; }

/**
         * 1. Reset any leftover or conflicting `left`/`right` values.
         */
.u-push-2\/3 {
  position: relative !important;
  right: auto !important;
  /* [1] */
  left: 66.66667% !important; }

.u-pull-2\/3 {
  position: relative !important;
  right: 66.66667% !important;
  left: auto !important;
  /* [1] */ }

.u-3\/3 {
  width: 100% !important; }

/**
         * 1. Reset any leftover or conflicting `left`/`right` values.
         */
.u-push-3\/3 {
  position: relative !important;
  right: auto !important;
  /* [1] */
  left: 100% !important; }

.u-pull-3\/3 {
  position: relative !important;
  right: 100% !important;
  left: auto !important;
  /* [1] */ }

.u-1\/4 {
  width: 25% !important; }

/**
         * 1. Reset any leftover or conflicting `left`/`right` values.
         */
.u-push-1\/4 {
  position: relative !important;
  right: auto !important;
  /* [1] */
  left: 25% !important; }

.u-pull-1\/4 {
  position: relative !important;
  right: 25% !important;
  left: auto !important;
  /* [1] */ }

.u-2\/4 {
  width: 50% !important; }

/**
         * 1. Reset any leftover or conflicting `left`/`right` values.
         */
.u-push-2\/4 {
  position: relative !important;
  right: auto !important;
  /* [1] */
  left: 50% !important; }

.u-pull-2\/4 {
  position: relative !important;
  right: 50% !important;
  left: auto !important;
  /* [1] */ }

.u-3\/4 {
  width: 75% !important; }

/**
         * 1. Reset any leftover or conflicting `left`/`right` values.
         */
.u-push-3\/4 {
  position: relative !important;
  right: auto !important;
  /* [1] */
  left: 75% !important; }

.u-pull-3\/4 {
  position: relative !important;
  right: 75% !important;
  left: auto !important;
  /* [1] */ }

.u-4\/4 {
  width: 100% !important; }

/**
         * 1. Reset any leftover or conflicting `left`/`right` values.
         */
.u-push-4\/4 {
  position: relative !important;
  right: auto !important;
  /* [1] */
  left: 100% !important; }

.u-pull-4\/4 {
  position: relative !important;
  right: 100% !important;
  left: auto !important;
  /* [1] */ }

.u-1\/5 {
  width: 20% !important; }

/**
         * 1. Reset any leftover or conflicting `left`/`right` values.
         */
.u-push-1\/5 {
  position: relative !important;
  right: auto !important;
  /* [1] */
  left: 20% !important; }

.u-pull-1\/5 {
  position: relative !important;
  right: 20% !important;
  left: auto !important;
  /* [1] */ }

.u-2\/5 {
  width: 40% !important; }

/**
         * 1. Reset any leftover or conflicting `left`/`right` values.
         */
.u-push-2\/5 {
  position: relative !important;
  right: auto !important;
  /* [1] */
  left: 40% !important; }

.u-pull-2\/5 {
  position: relative !important;
  right: 40% !important;
  left: auto !important;
  /* [1] */ }

.u-3\/5 {
  width: 60% !important; }

/**
         * 1. Reset any leftover or conflicting `left`/`right` values.
         */
.u-push-3\/5 {
  position: relative !important;
  right: auto !important;
  /* [1] */
  left: 60% !important; }

.u-pull-3\/5 {
  position: relative !important;
  right: 60% !important;
  left: auto !important;
  /* [1] */ }

.u-4\/5 {
  width: 80% !important; }

/**
         * 1. Reset any leftover or conflicting `left`/`right` values.
         */
.u-push-4\/5 {
  position: relative !important;
  right: auto !important;
  /* [1] */
  left: 80% !important; }

.u-pull-4\/5 {
  position: relative !important;
  right: 80% !important;
  left: auto !important;
  /* [1] */ }

.u-5\/5 {
  width: 100% !important; }

/**
         * 1. Reset any leftover or conflicting `left`/`right` values.
         */
.u-push-5\/5 {
  position: relative !important;
  right: auto !important;
  /* [1] */
  left: 100% !important; }

.u-pull-5\/5 {
  position: relative !important;
  right: 100% !important;
  left: auto !important;
  /* [1] */ }

/**
 * If we’re using Sass-MQ, automatically generate grid system(s) for each of our
 * defined breakpoints, and give them a Responsive Suffix, e.g.:
 *
 * <div class="u-3/12@mobile">
 */
/* ==========================================================================
   #HEADINGS
   ========================================================================== */
/**
 * Redefine all of our basic heading styles against utility classes so as to
 * allow for double stranded heading hierarchy, e.g. we semantically need an H2,
 * but we want it to be sized like an H1:
 *
 *   <h2 class="u-h1"></h2>
 *
 */
.u-h1 {
  font-size: 36px !important;
  font-size: 2.25rem !important;
  line-height: 1.16667 !important; }

.u-h2 {
  font-size: 28px !important;
  font-size: 1.75rem !important;
  line-height: 1.28571 !important; }

.u-h3 {
  font-size: 24px !important;
  font-size: 1.5rem !important;
  line-height: 1.25 !important; }

.u-h4 {
  font-size: 20px !important;
  font-size: 1.25rem !important;
  line-height: 1.5 !important; }

.u-h5 {
  font-size: 18px !important;
  font-size: 1.125rem !important;
  line-height: 1.33333 !important; }

.u-h6 {
  font-size: 16px !important;
  font-size: 1rem !important;
  line-height: 1.5 !important; }

/* ==========================================================================
   #SPACINGS
   ========================================================================== */
/**
 * Utility classes to put specific spacing values onto elements. The below loop
 * will generate us a suite of classes like:
 *
 *   .u-margin-top {}
 *   .u-padding-left-large {}
 *   .u-margin-right-small {}
 *   .u-padding {}
 *   .u-padding-right-none {}
 *   .u-padding-horizontal {}
 *   .u-padding-vertical-small {}
 */
.u-padding {
  padding: 24px !important; }

.u-padding-tiny {
  padding: 6px !important; }

.u-padding-small {
  padding: 12px !important; }

.u-padding-large {
  padding: 48px !important; }

.u-padding-huge {
  padding: 96px !important; }

.u-padding-none {
  padding: 0 !important; }

.u-padding-top {
  padding-top: 24px !important; }

.u-padding-top-tiny {
  padding-top: 6px !important; }

.u-padding-top-small {
  padding-top: 12px !important; }

.u-padding-top-large {
  padding-top: 48px !important; }

.u-padding-top-huge {
  padding-top: 96px !important; }

.u-padding-top-none {
  padding-top: 0 !important; }

.u-padding-right {
  padding-right: 24px !important; }

.u-padding-right-tiny {
  padding-right: 6px !important; }

.u-padding-right-small {
  padding-right: 12px !important; }

.u-padding-right-large {
  padding-right: 48px !important; }

.u-padding-right-huge {
  padding-right: 96px !important; }

.u-padding-right-none {
  padding-right: 0 !important; }

.u-padding-bottom {
  padding-bottom: 24px !important; }

.u-padding-bottom-tiny {
  padding-bottom: 6px !important; }

.u-padding-bottom-small {
  padding-bottom: 12px !important; }

.u-padding-bottom-large {
  padding-bottom: 48px !important; }

.u-padding-bottom-huge {
  padding-bottom: 96px !important; }

.u-padding-bottom-none {
  padding-bottom: 0 !important; }

.u-padding-left {
  padding-left: 24px !important; }

.u-padding-left-tiny {
  padding-left: 6px !important; }

.u-padding-left-small {
  padding-left: 12px !important; }

.u-padding-left-large {
  padding-left: 48px !important; }

.u-padding-left-huge {
  padding-left: 96px !important; }

.u-padding-left-none {
  padding-left: 0 !important; }

.u-padding-horizontal {
  padding-left: 24px !important;
  padding-right: 24px !important; }

.u-padding-horizontal-tiny {
  padding-left: 6px !important;
  padding-right: 6px !important; }

.u-padding-horizontal-small {
  padding-left: 12px !important;
  padding-right: 12px !important; }

.u-padding-horizontal-large {
  padding-left: 48px !important;
  padding-right: 48px !important; }

.u-padding-horizontal-huge {
  padding-left: 96px !important;
  padding-right: 96px !important; }

.u-padding-horizontal-none {
  padding-left: 0 !important;
  padding-right: 0 !important; }

.u-padding-vertical {
  padding-top: 24px !important;
  padding-bottom: 24px !important; }

.u-padding-vertical-tiny {
  padding-top: 6px !important;
  padding-bottom: 6px !important; }

.u-padding-vertical-small {
  padding-top: 12px !important;
  padding-bottom: 12px !important; }

.u-padding-vertical-large {
  padding-top: 48px !important;
  padding-bottom: 48px !important; }

.u-padding-vertical-huge {
  padding-top: 96px !important;
  padding-bottom: 96px !important; }

.u-padding-vertical-none {
  padding-top: 0 !important;
  padding-bottom: 0 !important; }

.u-margin {
  margin: 24px !important; }

.u-margin-tiny {
  margin: 6px !important; }

.u-margin-small {
  margin: 12px !important; }

.u-margin-large {
  margin: 48px !important; }

.u-margin-huge {
  margin: 96px !important; }

.u-margin-none {
  margin: 0 !important; }

.u-margin-top {
  margin-top: 24px !important; }

.u-margin-top-tiny {
  margin-top: 6px !important; }

.u-margin-top-small {
  margin-top: 12px !important; }

.u-margin-top-large {
  margin-top: 48px !important; }

.u-margin-top-huge {
  margin-top: 96px !important; }

.u-margin-top-none {
  margin-top: 0 !important; }

.u-margin-right {
  margin-right: 24px !important; }

.u-margin-right-tiny {
  margin-right: 6px !important; }

.u-margin-right-small {
  margin-right: 12px !important; }

.u-margin-right-large {
  margin-right: 48px !important; }

.u-margin-right-huge {
  margin-right: 96px !important; }

.u-margin-right-none {
  margin-right: 0 !important; }

.u-margin-bottom {
  margin-bottom: 24px !important; }

.u-margin-bottom-tiny {
  margin-bottom: 6px !important; }

.u-margin-bottom-small {
  margin-bottom: 12px !important; }

.u-margin-bottom-large {
  margin-bottom: 48px !important; }

.u-margin-bottom-huge {
  margin-bottom: 96px !important; }

.u-margin-bottom-none {
  margin-bottom: 0 !important; }

.u-margin-left {
  margin-left: 24px !important; }

.u-margin-left-tiny {
  margin-left: 6px !important; }

.u-margin-left-small {
  margin-left: 12px !important; }

.u-margin-left-large {
  margin-left: 48px !important; }

.u-margin-left-huge {
  margin-left: 96px !important; }

.u-margin-left-none {
  margin-left: 0 !important; }

.u-margin-horizontal {
  margin-left: 24px !important;
  margin-right: 24px !important; }

.u-margin-horizontal-tiny {
  margin-left: 6px !important;
  margin-right: 6px !important; }

.u-margin-horizontal-small {
  margin-left: 12px !important;
  margin-right: 12px !important; }

.u-margin-horizontal-large {
  margin-left: 48px !important;
  margin-right: 48px !important; }

.u-margin-horizontal-huge {
  margin-left: 96px !important;
  margin-right: 96px !important; }

.u-margin-horizontal-none {
  margin-left: 0 !important;
  margin-right: 0 !important; }

.u-margin-vertical {
  margin-top: 24px !important;
  margin-bottom: 24px !important; }

.u-margin-vertical-tiny {
  margin-top: 6px !important;
  margin-bottom: 6px !important; }

.u-margin-vertical-small {
  margin-top: 12px !important;
  margin-bottom: 12px !important; }

.u-margin-vertical-large {
  margin-top: 48px !important;
  margin-bottom: 48px !important; }

.u-margin-vertical-huge {
  margin-top: 96px !important;
  margin-bottom: 96px !important; }

.u-margin-vertical-none {
  margin-top: 0 !important;
  margin-bottom: 0 !important; }

/* ==========================================================================
   #RESPONSIVE-SPACINGS
   ========================================================================== */
/**
 * Utility classes enhancing the normal spacing classes by adding responsiveness
 * to them. By default, there are not responsive spacings defined. You can
 * generate responsive spacings by adding entries to the following three Sass
 * maps, e.g.:
 *
 *   $inuit-responsive-spacing-directions: (
 *     null: null,
 *     "-bottom": "-bottom",
 *   );
 *
 *   $inuit-responsive-spacing-properties: (
 *     "margin": "margin",
 *   );
 *
 *   $inuit-responsive-spacing-sizes: (
 *     "-small": $inuit-global-spacing-unit-small,
 *   );
 *
 * This would bring us the following classes:
 *
 *   .u-margin-small@mobile {}
 *   .u-margin-small@tablet {}
 *   .u-margin-small@desktop {}
 *   .u-margin-small@wide {}
 *   .u-margin-bottom-small@mobile {}
 *   .u-margin-bottom-small@tablet {}
 *   .u-margin-bottom-small@desktop {}
 *   .u-margin-bottom-small@wide {}
 *
 * You can change the generated CSS classes by further extending the Sass maps.
 * If you want every ‘normal’ spacing (those from `utilities.spacings`) also as
 * a responsive version, you can just mirror the ‘normal’ spacings:
 *
 *   $inuit-responsive-spacing-directions: $inuit-spacing-directions !default;
 *
 *   $inuit-responsive-spacing-properties: $inuit-spacing-properties !default;
 *
 *   $inuit-responsive-spacing-sizes: $inuit-spacing-sizes !default;
 *
 * BUT BE AWARE: This can generate a huge chunk of extra CSS, depending on the
 * amount of breakpoints you defined. So please check your CSS’ output and
 * filesize!
 */
/* stylelint-disable max-nesting-depth */
/* stylelint-enable max-nesting-depth */
/* ==========================================================================
   #PRINT
   ========================================================================== */
/**
 * Very crude, reset-like styles taken from the HTML5 Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/5.3.0/dist/doc/css.md#print-styles
 * https://github.com/h5bp/html5-boilerplate/blob/master/dist/css/main.css#L205-L282
 */
@media print {
  /**
   * 1. Black prints faster: http://www.sanbeiji.com/archives/953
   */
  *,
  *:before,
  *:after {
    background: transparent !important;
    color: #000 !important;
    /* [1] */
    -webkit-box-shadow: none !important;
            box-shadow: none !important;
    text-shadow: none !important; }
  a,
  a:visited {
    text-decoration: underline; }
  a[href]:after {
    content: " (" attr(href) ")"; }
  abbr[title]:after {
    content: " (" attr(title) ")"; }
  /**
   * Don’t show links that are fragment identifiers, or use the `javascript:`
   * pseudo protocol.
   */
  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: ""; }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid; }
  /**
   * Printing Tables: http://css-discuss.incutio.com/wiki/Printing_Tables
   */
  thead {
    display: table-header-group; }
  tr,
  img {
    page-break-inside: avoid; }
  img {
    max-width: 100% !important; }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3; }
  h2,
  h3 {
    page-break-after: avoid; } }

/* ==========================================================================
   #HIDE
   ========================================================================== */
/**
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */
.u-hidden-visually {
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  -webkit-clip-path: inset(50%) !important;
          clip-path: inset(50%) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  white-space: nowrap !important;
  width: 1px !important; }

/**
 * Hide visually and from screen readers.
 */
.u-hidden {
  display: none !important; }

/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */
.hamburger {
  padding: 15px 0;
  display: inline-block;
  cursor: pointer;
  -webkit-transition-property: opacity, -webkit-filter;
  transition-property: opacity, -webkit-filter;
  transition-property: opacity, filter;
  transition-property: opacity, filter, -webkit-filter;
  -webkit-transition-duration: 0.15s;
          transition-duration: 0.15s;
  -webkit-transition-timing-function: linear;
          transition-timing-function: linear;
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  overflow: visible; }
  .hamburger:hover {
    opacity: 0.7; }
  .hamburger.is-active:hover {
    opacity: 0.7; }
  .hamburger.is-active .hamburger-inner,
  .hamburger.is-active .hamburger-inner::before,
  .hamburger.is-active .hamburger-inner::after {
    background-color: #000; }
  .hamburger:focus {
    outline: none; }

.hamburger-box {
  width: 32px;
  height: 18px;
  display: inline-block;
  position: relative; }

.hamburger-inner {
  display: block;
  top: 50%;
  margin-top: -1px; }
  .hamburger-inner, .hamburger-inner::before, .hamburger-inner::after {
    width: 32px;
    height: 2px;
    background-color: #000;
    border-radius: 4px;
    position: absolute;
    -webkit-transition-property: -webkit-transform;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    -webkit-transition-duration: 0.15s;
            transition-duration: 0.15s;
    -webkit-transition-timing-function: ease;
            transition-timing-function: ease; }
  .hamburger-inner::before, .hamburger-inner::after {
    content: "";
    display: block; }
  .hamburger-inner::before {
    top: -8px; }
  .hamburger-inner::after {
    bottom: -8px; }

/*
   * Spring
   */
.hamburger--spring .hamburger-inner {
  top: 1px;
  -webkit-transition: background-color 0s 0.13s linear;
  transition: background-color 0s 0.13s linear; }
  .hamburger--spring .hamburger-inner::before {
    top: 8px;
    -webkit-transition: top 0.1s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), -webkit-transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: top 0.1s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), -webkit-transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: top 0.1s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: top 0.1s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19), -webkit-transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19); }
  .hamburger--spring .hamburger-inner::after {
    top: 16px;
    -webkit-transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), -webkit-transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), -webkit-transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19), -webkit-transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19); }

.hamburger--spring.is-active .hamburger-inner {
  -webkit-transition-delay: 0.22s;
          transition-delay: 0.22s;
  background-color: transparent !important; }
  .hamburger--spring.is-active .hamburger-inner::before {
    top: 0;
    -webkit-transition: top 0.1s 0.15s cubic-bezier(0.33333, 0, 0.66667, 0.33333), -webkit-transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: top 0.1s 0.15s cubic-bezier(0.33333, 0, 0.66667, 0.33333), -webkit-transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: top 0.1s 0.15s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: top 0.1s 0.15s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1), -webkit-transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1);
    -webkit-transform: translate3d(0, 8px, 0) rotate(45deg);
            transform: translate3d(0, 8px, 0) rotate(45deg); }
  .hamburger--spring.is-active .hamburger-inner::after {
    top: 0;
    -webkit-transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333), -webkit-transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333), -webkit-transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1), -webkit-transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1);
    -webkit-transform: translate3d(0, 8px, 0) rotate(-45deg);
            transform: translate3d(0, 8px, 0) rotate(-45deg); }

/*
   * Spring Reverse
   */
.hamburger--spring-r .hamburger-inner {
  top: auto;
  bottom: 0;
  -webkit-transition-duration: 0.13s;
          transition-duration: 0.13s;
  -webkit-transition-delay: 0s;
          transition-delay: 0s;
  -webkit-transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
          transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19); }
  .hamburger--spring-r .hamburger-inner::after {
    top: -16px;
    -webkit-transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), opacity 0s linear;
    transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), opacity 0s linear; }
  .hamburger--spring-r .hamburger-inner::before {
    -webkit-transition: top 0.1s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), -webkit-transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: top 0.1s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), -webkit-transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: top 0.1s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: top 0.1s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19), -webkit-transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19); }

.hamburger--spring-r.is-active .hamburger-inner {
  -webkit-transform: translate3d(0, -8px, 0) rotate(-45deg);
          transform: translate3d(0, -8px, 0) rotate(-45deg);
  -webkit-transition-delay: 0.22s;
          transition-delay: 0.22s;
  -webkit-transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
          transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
  .hamburger--spring-r.is-active .hamburger-inner::after {
    top: 0;
    opacity: 0;
    -webkit-transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333), opacity 0s 0.22s linear;
    transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333), opacity 0s 0.22s linear; }
  .hamburger--spring-r.is-active .hamburger-inner::before {
    top: 0;
    -webkit-transform: rotate(90deg);
        -ms-transform: rotate(90deg);
            transform: rotate(90deg);
    -webkit-transition: top 0.1s 0.15s cubic-bezier(0.33333, 0, 0.66667, 0.33333), -webkit-transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: top 0.1s 0.15s cubic-bezier(0.33333, 0, 0.66667, 0.33333), -webkit-transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: top 0.1s 0.15s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: top 0.1s 0.15s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1), -webkit-transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1); }

/* Slider */
.slick-slider {
  position: relative;
  display: block;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -ms-touch-action: pan-y;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent; }

.slick-list {
  position: relative;
  overflow: hidden;
  display: block;
  margin: 0;
  padding: 0; }
  .slick-list:focus {
    outline: none; }
  .slick-list.dragging {
    cursor: pointer;
    cursor: hand; }

.slick-slider .slick-track,
.slick-slider .slick-list {
  -webkit-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0); }

.slick-track {
  position: relative;
  left: 0;
  top: 0;
  display: block;
  margin-left: auto;
  margin-right: auto; }
  .slick-track:before, .slick-track:after {
    content: "";
    display: table; }
  .slick-track:after {
    clear: both; }
  .slick-loading .slick-track {
    visibility: hidden; }

.slick-slide {
  float: left;
  height: 100%;
  min-height: 1px;
  display: none; }
  [dir="rtl"] .slick-slide {
    float: right; }
  .slick-slide img {
    display: block; }
  .slick-slide.slick-loading img {
    display: none; }
  .slick-slide.dragging img {
    pointer-events: none; }
  .slick-initialized .slick-slide {
    display: block; }
  .slick-loading .slick-slide {
    visibility: hidden; }
  .slick-vertical .slick-slide {
    display: block;
    height: auto;
    border: 1px solid transparent; }

.slick-arrow.slick-hidden {
  display: none; }

/* Slider */
.slick-loading .slick-list {
  background: #fff url("./ajax-loader.gif") center center no-repeat; }

/* Icons */
@font-face {
  font-family: "slick";
  src: url("./fonts/slick.eot");
  src: url("./fonts/slick.eot?#iefix") format("embedded-opentype"), url("./fonts/slick.woff") format("woff"), url("./fonts/slick.ttf") format("truetype"), url("./fonts/slick.svg#slick") format("svg");
  font-weight: normal;
  font-style: normal; }

/* Arrows */
.slick-prev,
.slick-next {
  position: absolute;
  display: block;
  height: 20px;
  width: 20px;
  line-height: 0px;
  font-size: 0px;
  cursor: pointer;
  background: transparent;
  color: transparent;
  top: 50%;
  -webkit-transform: translate(0, -50%);
  -ms-transform: translate(0, -50%);
  transform: translate(0, -50%);
  padding: 0;
  border: none;
  outline: none; }
  .slick-prev:hover, .slick-prev:focus,
  .slick-next:hover,
  .slick-next:focus {
    outline: none;
    background: transparent;
    color: transparent; }
    .slick-prev:hover:before, .slick-prev:focus:before,
    .slick-next:hover:before,
    .slick-next:focus:before {
      opacity: 1; }
  .slick-prev.slick-disabled:before,
  .slick-next.slick-disabled:before {
    opacity: 0.25; }
  .slick-prev:before,
  .slick-next:before {
    font-family: "slick";
    font-size: 20px;
    line-height: 1;
    color: white;
    opacity: 0.75;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale; }

.slick-prev {
  left: -25px; }
  [dir="rtl"] .slick-prev {
    left: auto;
    right: -25px; }
  .slick-prev:before {
    content: "←"; }
    [dir="rtl"] .slick-prev:before {
      content: "→"; }

.slick-next {
  right: -25px; }
  [dir="rtl"] .slick-next {
    left: -25px;
    right: auto; }
  .slick-next:before {
    content: "→"; }
    [dir="rtl"] .slick-next:before {
      content: "←"; }

/* Dots */
.slick-dotted.slick-slider {
  margin-bottom: 30px; }

.slick-dots {
  position: absolute;
  bottom: -25px;
  list-style: none;
  display: block;
  text-align: center;
  padding: 0;
  margin: 0;
  width: 100%; }
  .slick-dots li {
    position: relative;
    display: inline-block;
    height: 20px;
    width: 20px;
    margin: 0 5px;
    padding: 0;
    cursor: pointer; }
    .slick-dots li button {
      border: 0;
      background: transparent;
      display: block;
      height: 20px;
      width: 20px;
      outline: none;
      line-height: 0px;
      font-size: 0px;
      color: transparent;
      padding: 5px;
      cursor: pointer; }
      .slick-dots li button:hover, .slick-dots li button:focus {
        outline: none; }
        .slick-dots li button:hover:before, .slick-dots li button:focus:before {
          opacity: 1; }
      .slick-dots li button:before {
        position: absolute;
        top: 0;
        left: 0;
        content: "•";
        width: 20px;
        height: 20px;
        font-family: "slick";
        font-size: 6px;
        line-height: 20px;
        text-align: center;
        color: black;
        opacity: 0.25;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale; }
    .slick-dots li.slick-active button:before {
      color: black;
      opacity: 0.75; }
